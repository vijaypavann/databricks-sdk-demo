# This workflow will install Python dependencies, creates a Profile, builds a Wheel File and runs a Python program with a single version of Python [3.10]
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Run Git Repo to Databricks Workspace Repos Sync on Push to main branch 

on:
  push:
    branches: [ "main" ]
  
permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
      DATABRICKS_TOKEN:  ${{ secrets.DATABRICKS_TOKEN }}
      GIT_CHECKOUT_PATH:  ${{ secrets.GIT_CHECKOUT_PATH }}

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        cache: 'pip'

    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
      
    - name: Print Env Hello
      run: echo ${GITHUB_REF_NAME}  ${GITHUB_REF_TYPE}  ${GITHUB_SERVER_URL} ${GITHUB_REF#refs/heads/} ${{ vars.GIT_CHECKOUT_PATH }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip list
    
    
    - name: Prepare profile
      run: |
        echo "[DEV]" >> ~/.databrickscfg
        echo "host = $DATABRICKS_HOST" >> ~/.databrickscfg
        echo "token = $DATABRICKS_TOKEN" >> ~/.databrickscfg

    - name: Show profile
      run: |
        cat ~/.databrickscfg
   
    - name: Build Wheel File
      run: python setup.py bdist_wheel --dist-dir=/tmp/demo    
    
    - name: Run Setup Script
      run: pip install /tmp/demo/databricks_sdk_demo-1.0-py3-none-any.whl --force-reinstall

    - name: Sync Git Repo Code to DB WS
      run: python repos/repo_db_ws_sync.py  --git_checkout_path ${GIT_CHECKOUT_PATH} --branch_name ${GITHUB_REF#refs/heads/}

    - name: Remove Temporary Repo
      run: rm -rf /tmp/demo
           rm -rf build
           rm -rf dist